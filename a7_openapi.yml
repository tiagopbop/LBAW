openapi: 3.0.0

info:
  version: '1.0'
  title: 'LBAW ManageMe Web API'
  description: 'Web Resources Specification for ManageMe Project Management Platform'

servers:
  - url: http://manage-me-api.com
    description: Production server

tags:
  - name: 'M01: Authentication and Individual Profile'
  - name: 'M02: Projects and Tasks'
  - name: 'M03: Users and Roles'
  - name: 'M04: User Administration and Static Pages'

paths:
  /login:
    get:
      operationId: 'R101'
      summary: 'Fetch login requirements'
      description: 'Provides metadata for the login endpoint, including required fields and expected formats.'
      tags:
        - 'M01: Authentication and Individual Profile'
      responses:
        '200':
          description: 'Metadata for login endpoint'
          content:
            application/json:
              schema:
                type: object
                properties:
                  required_fields:
                    type: array
                    items:
                      type: string
                      example: email, password
                  description:
                    type: string
                    example: 'Submit email and password to authenticate.'

    post:
      operationId: 'R102'
      summary: 'Perform user login'
      description: 'Authenticates a user and returns a session token.'
      tags:
        - 'M01: Authentication and Individual Profile'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: 'user@example.com'
                password:
                  type: string
                  format: password
                  example: 'YourSecurePassword'
              required:
                - email
                - password
      responses:
        '200':
          description: 'Successful login'
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: 'jwt.token.here'
        '401':
          description: 'Invalid credentials'

  /logout:
    post:
      operationId: 'R103'
      summary: 'Logout action'
      description: 'Logout the current authenticated user.'
      tags:
        - 'M01: Authentication and Individual Profile'
      responses:
        '302':
          description: 'Redirect after processing logout.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful logout. Redirect to login form.'
                  value: '/login'

  /register:
    get:
      operationId: 'R104'
      summary: 'Fetch registration requirements'
      description: 'Provides metadata for the registration endpoint, including required fields and expected formats.'
      tags:
        - 'M01: Authentication and Individual Profile'
      responses:
        '200':
          description: 'Metadata for registration endpoint'
          content:
            application/json:
              schema:
                type: object
                properties:
                  required_fields:
                    type: array
                    items:
                      type: string
                      example: name, email, password
                  description:
                    type: string
                    example: 'Submit name, email, and password to register a new user.'

    post:
      operationId: 'R105'
      summary: 'Register a new user'
      description: 'Creates a new user account.'
      tags:
        - 'M01: Authentication and Individual Profile'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'John Doe'
                email:
                  type: string
                  format: email
                  example: 'user@example.com'
                password:
                  type: string
                  format: password
                  example: 'YourSecurePassword'
              required:
                - name
                - email
                - password
      responses:
        '201':
          description: 'User created successfully'
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: '123'
                  message:
                    type: string
                    example: 'User registered successfully.'
        '400':
          description: 'Invalid input'

  /users/{id}/update:
    patch:
      operationId: 'R302'
      summary: 'Update user profile information'
      description: 'Allows authenticated users to update their name, email, profile picture, pronouns, bio, and country.'
      tags:
        - 'M03: Users and Roles'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: 'The user ID to update'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'Jane Doe'
                email:
                  type: string
                  example: 'jane.doe@example.com'
                picture:
                  type: string
                  format: binary
                  example: 'http://example.com/pictures/jane_doe.jpg'
                pronouns:
                  type: string
                  example: 'she/her'
                bio:
                  type: string
                  example: 'Passionate project manager and team collaborator.'
                country:
                  type: string
                  example: 'United States'
              required:
                - name
                - email
      responses:
        '200':
          description: 'User profile updated successfully'
        '400':
          description: 'Invalid input'
        '404':
          description: 'User not found'
        '401':
          description: 'Unauthorized, user must be authenticated'

  /users/{id}:
    get:
      operationId: 'R301'
      summary: 'View user profile'
      description: 'Shows the individual user profile details, including name, email, profile picture, pronouns, bio, and country.'
      tags:
        - 'M03: Users and Roles'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Ok. Show user profile'
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  email:
                    type: string
                  picture:
                    type: string
                    format: binary
                  pronouns:
                    type: string
                  bio:
                    type: string
                  country:
                    type: string
                  created_at:
                    type: string
                    format: date-time
                example:
                  id: 1
                  name: 'John Doe'
                  email: 'john.doe@example.com'
                  picture: 'http://example.com/pictures/john_doe.jpg'
                  pronouns: 'he/him'
                  bio: 'Project manager with a love for technology and innovation.'
                  country: 'Canada'
                  created_at: '2024-11-17T12:00:00Z'

  # Projects and Tasks
  /projects/{id}:
    put:
      operationId: 'R201'
      summary: 'Update project information'
      description: 'Replace the entire project data with the new values.'
      tags:
        - 'M02: Projects and Tasks'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'Project Alpha'
                description:
                  type: string
                  example: 'Updated description for the project.'
                deadline:
                  type: string
                  format: date
                  example: '2024-12-31'
                owner:
                  type: string
                  example: 'John Doe'
              required:
                - name
                - description
      responses:
        '200':
          description: 'Project updated successfully'
        '400':
          description: 'Invalid input'
        '404':
          description: 'Project not found'

    patch:
      operationId: 'R202'
      summary: 'Partially update project information'
      description: 'Update specific fields of a project.'
      tags:
        - 'M02: Projects and Tasks'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: 'Updated project description.'
                deadline:
                  type: string
                  format: date
                  example: '2024-12-31'
                owner:
                  type: string
                  example: 'Jane Smith'
      responses:
        '200':
          description: 'Project updated successfully'
        '400':
          description: 'Invalid input'
        '404':
          description: 'Project not found'

  /tasks/{id}:
    put:
      operationId: 'R203'
      summary: 'Update task information'
      description: 'Replace the entire task data with the new values.'
      tags:
        - 'M02: Projects and Tasks'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: 'Task 1'
                description:
                  type: string
                  example: 'Updated description for the task.'
                status:
                  type: string
                  example: 'In Progress'
                due_date:
                  type: string
                  format: date
                  example: '2024-12-15'
                priority:
                  type: string
                  enum:
                    - Low
                    - Medium
                    - High
                  example: 'Medium'
              required:
                - title
                - status
      responses:
        '200':
          description: 'Task updated successfully'
        '400':
          description: 'Invalid input'
        '404':
          description: 'Task not found'

    patch:
      operationId: 'R204'
      summary: 'Partially update task information'
      description: 'Update specific fields of a task.'
      tags:
        - 'M02: Projects and Tasks'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: 'Completed'
                due_date:
                  type: string
                  format: date
                  example: '2024-12-20'
                priority:
                  type: string
                  enum:
                    - Low
                    - Medium
                    - High
                  example: 'High'
      responses:
        '200':
          description: 'Task updated successfully'
        '400':
          description: 'Invalid input'
        '404':
          description: 'Task not found'
          
  /users/{id}/suspend:
    post:
      operationId: 'R401'
      summary: 'Suspend a user account'
      description: 'Suspends the specified user account, limiting access for a set period.'
      tags:
        - 'M04: User Administration and Static Pages'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: 'The user ID to suspend'
      responses:
        '200':
          description: 'User successfully suspended'
        '404':
          description: 'User not found'
        '403':
          description: 'Forbidden, only admins can suspend users'
        '401':
          description: 'Unauthorized, user must be authenticated'
          
  /users/{id}/unsuspend:
    post:
      operationId: 'R402'
      summary: 'Unsuspend a user account'
      description: 'Unsuspends the specified user account, restoring access.'
      tags:
        - 'M04: User Administration and Static Pages'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: 'The user ID to unsuspend'
      responses:
        '200':
          description: 'User successfully unsuspended'
        '404':
          description: 'User not found'
        '403':
          description: 'Forbidden, only admins can unsuspend users'
        '401':
          description: 'Unauthorized, user must be authenticated'

  /projects/{id}/suspend:
    post:
      operationId: 'R403'
      summary: 'Suspend a project'
      description: 'Suspends the specified project, making it inactive and inaccessible for a period.'
      tags:
        - 'M04: User Administration and Static Pages'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: 'The project ID to suspend'
      responses:
        '200':
          description: 'Project successfully suspended'
        '404':
          description: 'Project not found'
        '403':
          description: 'Forbidden, only admins can suspend projects'
        '401':
          description: 'Unauthorized, user must be authenticated'

  /projects/{id}/unsuspend:
    post:
      operationId: 'R404'
      summary: 'Unsuspend a project'
      description: 'Unsuspends the specified project, restoring its activity and access.'
      tags:
        - 'M04: User Administration and Static Pages'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: 'The project ID to unsuspend'
      responses:
        '200':
          description: 'Project successfully unsuspended'
        '404':
          description: 'Project not found'
        '403':
          description: 'Forbidden, only admins can unsuspend projects'
        '401':
          description: 'Unauthorized, user must be authenticated'